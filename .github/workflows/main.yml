name: build-and-test

env:
  DIR_API: "api"
  DIR_SITE: "site"
  DIR_INT: "integration"
  DIR_SCREENS: "integration/screenshots"
  ART_API: "api-${{github.sha}}"
  ART_SITE: "site-${{github.sha}}"
  ART_SCREENS: "screenshots-${{github.sha}}"

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-api:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Restore dependencies
      run: dotnet restore
      working-directory: ${{env.DIR_API}}
      
    - name: Build
      run: dotnet build --no-restore
      working-directory: ${{env.DIR_API}}
      
    - name: Test
      run: dotnet test --no-build --verbosity normal
      working-directory: ${{env.DIR_API}}

    - name: Create artifacts
      uses: actions/upload-artifact@v2
      with:
        name: "${{env.ART_API}}"
        path: "${{env.DIR_API}}/bin/Debug/net5.0/**"

  build-site:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: "./${{env.DIR_SITE}}"
    
    - name: Install dependencies
      run: npm ci
      working-directory: ${{env.DIR_SITE}}
    
    - name: Test
      run: npm run test:ci
      working-directory: ${{env.DIR_SITE}}

    - name: Build
      run: npm run build
      working-directory: ${{env.DIR_SITE}}
    
    - name: Create artifacts
      uses: actions/upload-artifact@v2
      with:
        name: "${{env.ART_SITE}}"
        path: "${{env.DIR_SITE}}/build"

  test-integration-windows:
    runs-on: windows-latest
    needs: [build-api, build-site]
    
    steps:
    - uses: actions/checkout@v2
      with:
        path: git
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: "./git/${{env.DIR_INT}}"
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    
    - name: Install dependencies
      run: npm i
      working-directory: "git/${{env.DIR_INT}}"
      
    - name: Run selenium, api and site
      run: |
        echo "Starting selenium"
        cmd /c start "" selenium-standalone start 
        echo "Starting api"
        cmd /c rem start "" ${{env.DIR_API}}/api.exe
        cmd /c start "" notepad.exe
        echo "Starting site"
        npm i -g serve 
        cmd /c start "" serve -s -l 3000 ${{env.DIR_SITE}}
        echo "Wait a bit"
        ping -n 5 127.0.0.1

    - name: Test
      run: npm test
      working-directory: "git/${{env.DIR_INT}}"

    - name: Create artifacts
      if: ${{!cancelled()}}
      uses: actions/upload-artifact@v2
      with:
        name: "${{env.ART_SCREENS}}"
        path: "git/${{env.DIR_SCREENS}}"

  test-integration-linux:
    runs-on: ubuntu-latest
    needs: [build-api, build-site]
    
    steps:
    - uses: actions/checkout@v2
      with:
        path: git
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: "./git/${{env.DIR_INT}}"
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    
    - name: Install dependencies
      run: npm i
      working-directory: "git/${{env.DIR_INT}}"
      
    - name: Run selenium, api and site
      run: |
        echo "Starting selenium"
        selenium-standalone start &
        echo "Starting api"
        # ./${{env.DIR_API}}/api.exe &
        echo "Starting site"
        npm i -g serve
        serve -s -l 3000 ${{env.DIR_SITE}} &
        echo "Wait a bit"
        ping -n 5 127.0.0.1

    - name: Test
      run: npm test
      working-directory: "git/${{env.DIR_INT}}"

    - name: Create artifacts
      if: ${{!cancelled()}}
      uses: actions/upload-artifact@v2
      with:
        name: "${{env.ART_SCREENS}}"
        path: "git/${{env.DIR_SCREENS}}"
